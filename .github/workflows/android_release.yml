name: Android Release (AAB)

on:
  workflow_dispatch:
    inputs:
      app_id:
        description: "Custom applicationId (optional)"
        required: false
        default: "app.gentlequest.www"
      package_name:
        description: "Google Play package name (e.g., app.gentlequest.www)"
        required: false
        default: "app.gentlequest.www"
      track:
        description: "Play track to upload (internal, alpha, beta, production)"
        required: false
        default: "internal"
      build_number:
        description: "Build number (optional). Defaults to GitHub run number if empty."
        required: false
        default: ""
      release_notes:
        description: "Release notes/changelog (optional)"
        required: false
        default: ""
      upload:
        description: "Upload to Google Play after build?"
        required: false
        default: "false"
      preflight:
        description: "Run format/analyze/tests before build?"
        required: false
        default: "false"
  workflow_call:
    inputs:
      app_id:
        required: false
        type: string
        default: "app.mhb.preview"
      package_name:
        required: false
        type: string
        default: "app.mhb.preview"
      track:
        required: false
        type: string
        default: "internal"
      build_number:
        required: false
        type: string
        default: ""
      release_notes:
        required: false
        type: string
        default: ""
      upload:
        required: false
        type: string
        default: "false"
      preflight:
        required: false
        type: string
        default: "false"
      environment:
        required: false
        type: string
        default: "beta"
      sentry_upload:
        required: false
        type: string
        default: "false"
      sentry_org:
        required: false
        type: string
        default: ""
      sentry_project:
        required: false
        type: string
        default: ""
      sentry_release:
        required: false
        type: string
        default: ""
      crashlytics_upload:
        required: false
        type: string
        default: "false"

jobs:
  build_aab:
    name: Build signed AAB
    runs-on: ubuntu-latest
    env:
      ORG_GRADLE_PROJECT_APP_ID: app.gentlequest.www
      ORG_GRADLE_PROJECT_VERSION_CODE: ${{ inputs.build_number || github.run_number }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Setup Flutter SDK + Android SDK
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: '3.32.8'

      - name: Flutter version
        run: flutter --version

      - name: Cache Pub (Dart/Flutter packages)
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('ai_buddy_web/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Restore keystore from secret
        shell: bash
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        run: |
          set -e
          if [ -z "$ANDROID_KEYSTORE_BASE64" ]; then
            echo "::warning::ANDROID_KEYSTORE_BASE64 not set. Build will fall back to debug signing (not Play-ready)."
          else
            mkdir -p ai_buddy_web/android/app
            echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > ai_buddy_web/android/app/upload-keystore.jks
            ls -lh ai_buddy_web/android/app/upload-keystore.jks
          fi

      - name: Install Flutter deps
        working-directory: ai_buddy_web
        run: flutter pub get

      - name: Preflight - format check
        if: ${{ (inputs.preflight || github.event.inputs.preflight) == 'true' }}
        working-directory: ai_buddy_web
        run: |
          set -e
          # Format only relevant Dart sources; exclude backups/exports to keep CI stable
          FOUND=$(find . -type f -name "*.dart" \
            -not -path "./lib/screens/quest_screen_backup/*" \
            -not -path "./lib/screens/quest_screen/*" \
            -not -path "./lib/dhiwise_export/*" \
            -not -path "./lib/dhiwise/*" \
            -not -path "./lib/dhiwise/**/backup/*" -print)
          if [ -z "$FOUND" ]; then
            echo "No Dart files to format"; exit 0;
          fi
          printf "%s\n" "$FOUND" | tr '\n' '\0' | xargs -0 dart format --output=none --set-exit-if-changed

      - name: Preflight - analyze
        if: ${{ (inputs.preflight || github.event.inputs.preflight) == 'true' }}
        working-directory: ai_buddy_web
        run: flutter analyze --no-fatal-infos --no-fatal-warnings

      - name: Preflight - tests
        if: ${{ (inputs.preflight || github.event.inputs.preflight) == 'true' }}
        working-directory: ai_buddy_web
        run: |
          if [ -d test ]; then
            flutter test -r expanded
          else
            echo "No tests/ directory found. Skipping flutter test."
          fi

      - name: Build signed AAB via Gradle
        working-directory: ai_buddy_web/android
        env:
          # Map repo secrets to our build.gradle env overrides
          STORE_FILE: ${{ github.workspace }}/ai_buddy_web/android/app/upload-keystore.jks
          STORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
          # Version code for Gradle (exposed as project property VERSION_CODE)
          ORG_GRADLE_PROJECT_VERSION_CODE: ${{ inputs.build_number || github.event.inputs.build_number }}
        run: |
          set -e
          BN="${{ inputs.build_number || github.event.inputs.build_number }}"
          if [ -z "$BN" ]; then BN="$GITHUB_RUN_NUMBER"; fi
          echo "Using build number: $BN"
          # Ensure wrapper is executable on Linux runners
          chmod +x ./gradlew || true
          # Build the release bundle using the module task name
          ./gradlew app:bundleRelease --no-daemon --stacktrace --info

      - name: Upload ProGuard mapping to Sentry (optional)
        if: ${{ (inputs.sentry_upload || github.event.inputs.sentry_upload) == 'true' }}
        shell: bash
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ inputs.sentry_org || github.event.inputs.sentry_org }}
          SENTRY_PROJECT: ${{ inputs.sentry_project || github.event.inputs.sentry_project }}
          PKG: ${{ inputs.package_name || github.event.inputs.package_name }}
          BN: ${{ inputs.build_number || github.event.inputs.build_number }}
          SENTRY_RELEASE_INPUT: ${{ inputs.sentry_release || github.event.inputs.sentry_release }}
        run: |
          set -e
          if [ -z "$SENTRY_AUTH_TOKEN" ] || [ -z "$SENTRY_ORG" ] || [ -z "$SENTRY_PROJECT" ]; then
            echo "::warning::Missing Sentry config; skipping upload"; exit 0; fi
          REL="$SENTRY_RELEASE_INPUT"
          if [ -z "$REL" ]; then
            BNV="$BN"; [ -z "$BNV" ] && BNV="$GITHUB_RUN_NUMBER"
            REL="${PKG}@${BNV}"
          fi
          echo "Using Sentry release: $REL"
          curl -sL https://sentry.io/get-cli/ | bash
          MAP1="ai_buddy_web/android/app/build/outputs/mapping/release/mapping.txt"
          MAP2="ai_buddy_web/build/app/outputs/mapping/release/mapping.txt"
          MAP=""
          [ -f "$MAP1" ] && MAP="$MAP1"
          [ -z "$MAP" ] && [ -f "$MAP2" ] && MAP="$MAP2"
          if [ -z "$MAP" ]; then echo "::warning::mapping.txt not found, skipping"; exit 0; fi
          sentry-cli --auth-token "$SENTRY_AUTH_TOKEN" releases --org "$SENTRY_ORG" new "$REL" || true
          sentry-cli --auth-token "$SENTRY_AUTH_TOKEN" releases --org "$SENTRY_ORG" files "$REL" upload-sourcemaps --no-rewrite || true
          sentry-cli --auth-token "$SENTRY_AUTH_TOKEN" releases --org "$SENTRY_ORG" files "$REL" upload "${MAP}" --name "mapping.txt"

      - name: Upload Crashlytics mapping (optional)
        if: ${{ (inputs.crashlytics_upload || github.event.inputs.crashlytics_upload) == 'true' }}
        working-directory: ai_buddy_web/android
        shell: bash
        run: |
          set -e
          chmod +x ./gradlew || true
          if ./gradlew -q tasks --all | grep -q "uploadCrashlyticsSymbolFileRelease"; then
            ./gradlew app:uploadCrashlyticsSymbolFileRelease --no-daemon --stacktrace
          else
            echo "::warning::Crashlytics task not found; skipping mapping upload"
          fi

      - name: Save metadata (build number and release notes)
        id: meta
        shell: bash
        env:
          RN_DISPATCH: ${{ github.event.inputs.release_notes }}
          RN_CALL: ${{ inputs.release_notes }}
          BN_DISPATCH: ${{ github.event.inputs.build_number }}
          BN_CALL: ${{ inputs.build_number }}
        run: |
          set -e
          BN="$BN_DISPATCH"; [ -z "$BN" ] && BN="$BN_CALL"; [ -z "$BN" ] && BN="$GITHUB_RUN_NUMBER"
          echo "BN=$BN" >> $GITHUB_OUTPUT
          NOTES="$RN_DISPATCH"; [ -z "$NOTES" ] && NOTES="$RN_CALL"
          echo "$NOTES" > release_notes.txt
          echo "RELEASE_NOTES_PATH=$PWD/release_notes.txt" >> $GITHUB_OUTPUT

      - name: Upload release notes artifact
        if: ${{ steps.meta.outputs.RELEASE_NOTES_PATH != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: android-release-notes
          path: release_notes.txt
          if-no-files-found: ignore

      - name: Locate AAB
        id: locate
        shell: bash
        run: |
          set -e
          CANDIDATES=(
            "ai_buddy_web/build/app/outputs/bundle/release/app-release.aab"
            "ai_buddy_web/android/app/build/outputs/bundle/release/app-release.aab"
          )
          FOUND=""
          for p in "${CANDIDATES[@]}"; do
            if [ -f "$p" ]; then FOUND="$p"; break; fi
          done
          if [ -z "$FOUND" ]; then
            FOUND=$(find ai_buddy_web -type f -name "*.aab" -print -quit || true)
          fi
          if [ -z "$FOUND" ]; then
            echo "::error::AAB not found"; exit 1;
          fi
          echo "AAB=$FOUND" >> $GITHUB_OUTPUT
          ls -lh "$FOUND"

      - name: Upload AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-aab
          path: ${{ steps.locate.outputs.AAB }}
          if-no-files-found: error

    outputs:
      AAB: ${{ steps.locate.outputs.AAB }}

  upload_play:
    name: Upload to Google Play
    runs-on: ubuntu-latest
    needs: build_aab
    if: ${{ (github.event.inputs.upload || inputs.upload) == 'true' }}
    environment: ${{ inputs.environment || github.event.inputs.environment }}
    steps:
      - name: Download AAB artifact
        uses: actions/download-artifact@v4
        with:
          name: android-aab
          path: dist

      - name: Prepare Play whatsNew files
        shell: bash
        env:
          RN_DISPATCH: ${{ github.event.inputs.release_notes }}
          RN_CALL: ${{ inputs.release_notes }}
        run: |
          set -e
          NOTES="$RN_DISPATCH"; [ -z "$NOTES" ] && NOTES="$RN_CALL"
          mkdir -p whatsnew
          # Default to en-US if not specified; Play requires language files
          echo "$NOTES" > whatsnew/en-US.txt

      - name: Find AAB path
        id: find_aab
        shell: bash
        run: |
          set -e
          FOUND=$(find dist -type f -name "*.aab" -print -quit)
          if [ -z "$FOUND" ]; then echo "::error::AAB not found in dist"; exit 1; fi
          echo "AAB=$FOUND" >> $GITHUB_OUTPUT
          ls -lh "$FOUND"

      - name: Upload to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAY_SERVICE_ACCOUNT_JSON }}
          packageName: ${{ github.event.inputs.package_name || inputs.package_name }}
          releaseFiles: ${{ steps.find_aab.outputs.AAB }}
          track: ${{ github.event.inputs.track || inputs.track }}
          status: completed
          whatsNewDirectory: whatsnew
