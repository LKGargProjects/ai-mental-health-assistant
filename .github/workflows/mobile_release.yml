name: Mobile Release (Android + iOS)

on:
  workflow_dispatch:
    inputs:
      app_id:
        description: "Android applicationId override (optional)"
        required: false
        default: "app.mhb.preview"
      package_name:
        description: "Google Play package name (e.g., app.mhb.preview)"
        required: false
        default: "app.mhb.preview"
      android_track:
        description: "Android Play track (internal, alpha, beta, production)"
        required: false
        default: "internal"
      ios_bundle_id:
        description: "iOS bundle identifier"
        required: false
        default: "app.mhb.preview"
      ios_scheme:
        description: "Xcode scheme"
        required: false
        default: "Runner"
      ios_export_method:
        description: "iOS export method (app-store, ad-hoc, development)"
        required: false
        default: "app-store"
      build_number:
        description: "Unified build number for both platforms (optional). Defaults to run number if empty."
        required: false
        default: ""
      release_notes:
        description: "Unified release notes/changelog (optional)"
        required: false
        default: ""
      preflight:
        description: "Run format/analyze/tests before builds?"
        required: false
        default: "false"
      upload_android:
        description: "Upload Android to Google Play after build?"
        required: false
        default: "false"
      upload_ios:
        description: "Upload iOS to TestFlight after build?"
        required: false
        default: "false"
      environment:
        description: "GitHub Environment for upload jobs (beta, production)"
        required: false
        default: "beta"
      sentry_upload:
        description: "Upload symbols to Sentry for both platforms?"
        required: false
        default: "false"
      sentry_org:
        description: "Sentry organization slug"
        required: false
        default: ""
      sentry_project_android:
        description: "Sentry project slug for Android"
        required: false
        default: ""
      sentry_project_ios:
        description: "Sentry project slug for iOS"
        required: false
        default: ""
      sentry_release:
        description: "Sentry release version override"
        required: false
        default: ""
      create_gh_release:
        description: "Create a GitHub Release and attach artifacts?"
        required: false
        default: "false"
      tag_prefix:
        description: "Tag prefix for GitHub Release (e.g., mobile-v)"
        required: false
        default: "mobile-v"
      notify_slack:
        description: "Send a Slack notification (requires SLACK_WEBHOOK_URL secret)"
        required: false
        default: "false"
      crashlytics_upload:
        description: "Upload Android Crashlytics symbols (if Gradle task available)"
        required: false
        default: "false"

jobs:
  android:
    name: Android job
    uses: ./.github/workflows/android_release.yml
    secrets: inherit
    with:
      app_id: ${{ inputs.app_id }}
      package_name: ${{ inputs.package_name }}
      track: ${{ inputs.android_track }}
      build_number: ${{ inputs.build_number }}
      release_notes: ${{ inputs.release_notes }}
      upload: ${{ inputs.upload_android }}
      preflight: ${{ inputs.preflight }}
      environment: ${{ inputs.environment }}
      sentry_upload: ${{ inputs.sentry_upload }}
      sentry_org: ${{ inputs.sentry_org }}
      sentry_project: ${{ inputs.sentry_project_android }}
      sentry_release: ${{ inputs.sentry_release }}
      crashlytics_upload: ${{ inputs.crashlytics_upload }}

  ios:
    name: iOS job
    uses: ./.github/workflows/ios_release.yml
    secrets: inherit
    with:
      bundle_id: ${{ inputs.ios_bundle_id }}
      scheme: ${{ inputs.ios_scheme }}
      export_method: ${{ inputs.ios_export_method }}
      build_number: ${{ inputs.build_number }}
      release_notes: ${{ inputs.release_notes }}
      upload: ${{ inputs.upload_ios }}
      preflight: ${{ inputs.preflight }}
      environment: ${{ inputs.environment }}
      sentry_upload: ${{ inputs.sentry_upload }}
      sentry_org: ${{ inputs.sentry_org }}
      sentry_project: ${{ inputs.sentry_project_ios }}
      sentry_release: ${{ inputs.sentry_release }}
      crashlytics_upload: ${{ inputs.crashlytics_upload }}

  release_notify:
    name: Release and Notify
    runs-on: ubuntu-latest
    needs: [android, ios]
    if: ${{ inputs.create_gh_release == 'true' || inputs.notify_slack == 'true' }}
    steps:
      - name: Download Android artifact
        uses: actions/download-artifact@v4
        with:
          name: android-aab
          path: dist
        continue-on-error: true

      - name: Download iOS IPA artifact
        uses: actions/download-artifact@v4
        with:
          name: ios-ipa
          path: dist
        continue-on-error: true

      - name: Compose tag and body
        id: meta
        shell: bash
        env:
          TAG_PREFIX: ${{ inputs.tag_prefix }}
          BN: ${{ inputs.build_number }}
          RN: ${{ inputs.release_notes }}
        run: |
          set -e
          BNV="$BN"; [ -z "$BNV" ] && BNV="$GITHUB_RUN_NUMBER"
          TAG="${TAG_PREFIX}${BNV}"
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "$RN" > RELEASE_BODY.txt
          echo "body_path=$PWD/RELEASE_BODY.txt" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        if: ${{ inputs.create_gh_release == 'true' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.meta.outputs.tag }}
          name: ${{ steps.meta.outputs.tag }}
          body_path: ${{ steps.meta.outputs.body_path }}
          files: |
            dist/*.aab
            dist/*.ipa
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Slack notify
        if: ${{ inputs.notify_slack == 'true' }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          set -e
          if [ -z "$SLACK_WEBHOOK_URL" ]; then echo "::warning::SLACK_WEBHOOK_URL not set, skipping"; exit 0; fi
          ANDROID_PRESENT=$(ls dist/*.aab 2>/dev/null | wc -l | xargs)
          IOS_PRESENT=$(ls dist/*.ipa 2>/dev/null | wc -l | xargs)
          MSG="Mobile build completed. Android artifact: $ANDROID_PRESENT, iOS artifact: $IOS_PRESENT. Tag: ${{ steps.meta.outputs.tag }}"
          PAYLOAD=$(printf '{"text":"%s"}' "${MSG//"/\"}")
          curl -X POST -H 'Content-type: application/json' --data "$PAYLOAD" "$SLACK_WEBHOOK_URL"
