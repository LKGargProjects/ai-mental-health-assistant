# =============================================================================
# FLUTTER WEB DOCKERFILE
# =============================================================================
# Multi-stage build for Flutter web application

# Stage 1: Build Flutter web app
FROM debian:latest AS build-env

# Build arguments for Sentry and environment metadata (optional)
ARG SENTRY_DSN_FRONTEND
ARG SENTRY_ENV
ARG APP_VERSION
ARG SENTRY_TRACES_SAMPLE_RATE

# Install Flutter dependencies
RUN apt-get update && apt-get install -y \
    curl \
    git \
    unzip \
    xz-utils \
    zip \
    libglu1-mesa \
    && rm -rf /var/lib/apt/lists/*

# Install Flutter
ENV FLUTTER_HOME="/flutter"
ENV FLUTTER_VERSION="3.32.8"
RUN git clone https://github.com/flutter/flutter.git $FLUTTER_HOME
WORKDIR $FLUTTER_HOME
RUN git fetch && git checkout $FLUTTER_VERSION

# Add Flutter to PATH
ENV PATH="$FLUTTER_HOME/bin:$PATH"

# Enable web support
RUN flutter config --enable-web

# Copy Flutter app
COPY . /app
WORKDIR /app

# Get dependencies and build web app
RUN flutter pub get
RUN flutter build web --release \
    --dart-define=SENTRY_DSN_FRONTEND=${SENTRY_DSN_FRONTEND} \
    --dart-define=SENTRY_ENV=${SENTRY_ENV} \
    --dart-define=APP_VERSION=${APP_VERSION} \
    --dart-define=SENTRY_TRACES_SAMPLE_RATE=${SENTRY_TRACES_SAMPLE_RATE}

# Stage 2: Serve with nginx
FROM nginx:alpine

# Copy built web app
COPY --from=build-env /app/build/web /usr/share/nginx/html

# Copy nginx configuration
COPY nginx.conf /etc/nginx/nginx.conf

# Expose port
EXPOSE 8080

# Start nginx
CMD ["nginx", "-g", "daemon off;"] 